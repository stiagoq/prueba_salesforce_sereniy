name: Serenity Tests in GitHub

on:
  workflow_dispatch:
    inputs:
      runner:
        description: "Prueba a correr"
        required: true
        default: 'RunnerAllFeatures'
        type: choice
        options:
          - RunnerAllFeatures
          - RunCreateAccountFeature
          - RunEditAccountFeature

      tags_in_scenario:
        description: "Desea ejecutar con tags"
        required: true
        type: boolean

      runnerTag:
        description: "Tag de prueba a correr"
        required: true
        default: 'create'
        type: choice
        options:
          - create
          - edit

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
             ${{ runner.os }}-maven-

      - name: Build and create cache directory
        run: mvn dependency:go-offline

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run browser
        uses: browser-actions/setup-chrome@latest
      - run: chrome --version

      - name: Run tests if tags_in_scenario is false
        if: ${{ !inputs.tags_in_scenario }}
        run: mvn clean verify -DfailIfNoTests=false -Dtest=${{ inputs.runner }} serenity:aggregate serenity:check

      - name: Run tests with tags if tags_in_scenario is true
        if: ${{ inputs.tags_in_scenario }}
        run: mvn clean verify -DfailIfNoTests=false -Dtags=${{ inputs.runnerTag }} serenity:aggregate serenity:check

      - name: Test Report Generation
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Serenity Report
          path: target/site/serenity

          
  #runner_test:
   # needs: build
    #runs-on: ubuntu-latest


      #- name: Cache Maven packages
       # uses: actions/cache@v4
        #with:
         # path: ~/.m2/repository
          #key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          #restore-keys: |
           # ${{ runner.os }}-maven-

      #- name: Build and create cache directory
        #run: mvn dependency:go-offline
